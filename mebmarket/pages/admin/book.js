import Head from "next/head";
import React, { useEffect, useState, useMemo } from "react";
import Deletebook from "@/components/deletebook";
import { requireAuthentication } from "@/utils/requireAuthentication";
import Loading from "@/components/Loading";
import { getSession } from "next-auth/react";
import { TextField } from "@mui/material";
import { Pagination } from "@mui/material";

export default function Adminpage() {
    const [loading, setLoading] = useState(true);
    const [Data, setData] = useState([]);

    const [page, setPage] = useState(1);
    const [amount, setAmount] = useState(10);
    const [count, setCount] = useState(0);

    const DeletebookMemoized = React.memo(Deletebook);
    const getcount = async () => {
        const res = await fetch("http://localhost:3000/api/getcount").then(
            (res) => res.json()
        );
        setCount(Math.ceil(res / amount));
    };
    const fetchPage = async () => {
        const data = await fetch("/api/bookmap/getpage", {
            method: "POST",
            headers: {
                "Content-Type": "application/x-www-form-urlencoded",
            },
            body: new URLSearchParams({
                page: page,
                amount: amount,
            }),
        });
        const res = await data.json();
        setData(res);
        setLoading(false);
    };

    useEffect(() => {
        getcount();
        fetchPage();
    }, []);

    useEffect(() => {
        getcount();
        fetchPage();
    }, [page, amount]);
    const mapping = useMemo(() => {
        return Object.values(Data).map((property, index) => {
            return (
                <DeletebookMemoized key={property.bookId} property={property} />
            );
        });
    }, [Data]);

    if (loading) {
        return <Loading />;
    }

    const handleChange = (event, value) => {
        window.scrollTo(0, 0);
        setPage(value);
    };

    return (
        <>
            <Head>
                <title>จัดการหนังสือ</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <meta
                    name="viewport"
                    content="width=device-width, initial-scale=1"
                />
                <link
                    rel="icon"
                    type="image/png"
                    href="https://www.mebmarket.com/web/assets/images/ico/favicon-32x32.png"
                />
            </Head>
            <div className="amount-per-page">
                <TextField
                    label="จำนวนต่อหน้า"
                    type="Number"
                    value={amount || ""}
                    onChange={(e) => {
                        setAmount(e.target.value);
                    }}
                />
            </div>
            <div className="amount-per-page">
                <Pagination
                    defaultPage={6}
                    size="large"
                    count={count}
                    page={page || ""}
                    onChange={handleChange}
                />
            </div>
            <div className="list-items">{mapping}</div>
            <div className="amount-per-page">
                <Pagination
                    defaultPage={6}
                    size="large"
                    count={count}
                    page={page || ""}
                    onChange={handleChange}
                />
            </div>
        </>
    );
}

export async function getServerSideProps(context) {
    return requireAuthentication(context, ({ session }) => {
        return {
            props: { session },
        };
    });
}
